name: BUILD RESOURCES

on:
  push:
    paths-ignore:
      - '.devcontainer/**'
      - '.github/docs/**'
      - 'README.md'
      - 'LICENSE'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.gitversion.outputs.fullSemVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          
      - name: Determine Version
        id:   gitversion # id to later be referenced
        uses: gittools/actions/gitversion/execute@v0
      
      - id: version
        run: echo "semver=${{ steps.gitversion.outputs.fullSemVer }}" >> $GITHUB_OUTPUT

  build:
    needs: version
    runs-on: ubuntu-latest
    env:
      REPOSITORY: ghcr.io/jnnkrdb/gokv
      DOCKERFILE: ./Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: bash-version
        run: |
          echo SemVer: ${{ needs.version.outputs.semver }} > ./opt/gokv/VERSION 
          echo Ref: ${{ github.ref_name }} >> ./opt/gokv/VERSION
          echo $(cat './opt/gokv/VERSION')

      - name: Build Image Without Push
        uses: docker/build-push-action@v5
        if: github.event_name == 'pull_request'
        with:
          context: "."
          file: ${{ env.DOCKERFILE }}
          #tags: ${{ env.REPOSITORY }}:latest,${{ env.REPOSITORY }}:${{ github.ref_name }}
          push: false
      
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHP_TOKEN }}

      - name: Build Image With Push
        uses: docker/build-push-action@v5
        with:
          context: "."
          file: ${{ env.DOCKERFILE }}
          tags: ${{ env.REPOSITORY }}:latest,${{ env.REPOSITORY }}:${{ github.ref_name }}
          push: true

  helm:
    needs: version
    runs-on: ubuntu-latest
    env:
      #HELM_EXPERIMENTAL_OCI: 1 #enable OCI support
      HELM_DIR: .helm/
      HELM_URL: https://jnnkrdb.github.io/helm/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for changes
        run: |
          if [ "" = "$(git diff --name-status HEAD~ .helm/)" ]; then
            echo "NO changes made, skipping helm"-
            exit 0
          fi

      - name: Lint
        run: helm lint $HELM_DIR
      
      - name: Template
        run: helm template $HELM_DIR --debug
          
      - name: Git Clone HelmChart Repo
        run: |
          git clone https://${{ secrets.HELM_UPLOAD }}@github.com/jnnkrdb/helm /tmp/helm
          ls -lah

      - name: Package
        run: helm package $HELM_DIR --version ${{ needs.version.outputs.semver }} --app-version ${{ github.ref_name }} -d /tmp/helm/charts

      - name: Create Index
        run: | 
          cd /tmp/helm
          helm repo index --url $HELM_URL .
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m "added helmchart gokv: [${{ needs.version.outputs.semver }}]  | $(date +"%Y-%m-%d - %H:%M:%S")"
          git push
          